{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\Web Projects\\\\Expense Tracker\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensChart = props => {\n  const chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Fec\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n\n  for (const expense of props.expense) {\n    const expensMonth = expense.date.getMonth(); // starting at 0 => January\n\n    chartDataPoints[expensMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ExpensChart;\nexport default ExpensChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensChart\");","map":{"version":3,"names":["React","Chart","ExpensChart","props","chartDataPoints","label","value","expense","expensMonth","date","getMonth","amount"],"sources":["C:/Users/Asus/Documents/Web Projects/Expense Tracker/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Fec\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expense) {\r\n    const expensMonth = expense.date.getMonth(); // starting at 0 => January\r\n    chartDataPoints[expensMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensChart;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAC7B,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADsB,EAEtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFsB,EAGtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHsB,EAItB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJsB,EAKtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALsB,EAMtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANsB,EAOtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAPsB,EAQtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARsB,EAStB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATsB,EAUtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVsB,EAWtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXsB,EAYtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZsB,CAAxB;;EAeA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACI,OAA5B,EAAqC;IACnC,MAAMC,WAAW,GAAGD,OAAO,CAACE,IAAR,CAAaC,QAAb,EAApB,CADmC,CACU;;IAC7CN,eAAe,CAACI,WAAD,CAAf,CAA6BF,KAA7B,IAAsCC,OAAO,CAACI,MAA9C;EACD;;EAED,oBAAO,QAAC,KAAD;IAAO,UAAU,EAAEP;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAtBD;;KAAMF,W;AAwBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}